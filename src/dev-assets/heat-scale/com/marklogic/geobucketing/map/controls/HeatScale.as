// author: Randy Troppmann, May 13 2008// this class is bound to a Flash Sprite which must be recomiled to reflect the changespackage com.marklogic.geobucketing.map.controls{	import flash.display.Sprite;	import flash.text.TextField;    import flash.geom.ColorTransform;	import flash.display.MovieClip;	//import fl.motion.Color;		public class HeatScale extends Sprite {				private var _max:Number;		private var _min:Number = 1;		private var _scaleColors:Array;		public function HeatScale() {			scaleColors = [0xF6DC86, 0xF8BA69, 0xF3995F, 0xEE6651, 0xDE404F];		}						//// GETTERS and SETTERS		public function set max(p_max:Number){			_max = p_max;			updateLabels();		}				public function get max():Number{			return _max;		}						public function set min(p_min:Number){			_min = p_min;			updateLabels();		}				public function get min():Number{			return _min;		}					//the scale colors can be set by passing in an array of RGB hex values. See constructor;		public function set scaleColors(p_colors:Array):void{			try{									var ct:ColorTransform = new ColorTransform();				for (var i:uint; i<5; i++){					ct.color = p_colors[i];					this["tint" + i].transform.colorTransform = ct;				}				_scaleColors = p_colors;			}			catch(e:Error){}		}		public function get scaleColors():Array{			return _scaleColors;		}						//// PROTECTED methods		protected function updateLabels():void{			var step:Number = (max - min)/5;			for (var i:uint = 0; i<=5; i++){				this["tf" + i].text = Math.round(min + (step*i)).toString();			}		}	}}